name: Test

on: [push, pull_request]


jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.7', '3.8']
        TF: ['2.2', '2.3', '2.4']
        include:
          - os: ubuntu-latest
            python: '3.7'
            TF: '2.0'
          - os: ubuntu-latest
            python: '3.7'
            TF: '2.1'
          - os: macos-latest
            python: '3.7'
            TF: '2.0'
          - os: macos-latest
            python: '3.7'
            TF: '2.1'
          - os: windows-latest
            python: '3.7'
            TF: '2.0'
          - os: windows-latest
            python: '3.7'
            TF: '2.1'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip${{ matrix.python }}-${{ matrix.TF }}
          restore-keys: |
            ${{ runner.os }}-pip${{ matrix.python }}-
      - run: pip install wheel
      - name: Install numpy<1.20.0 for MacOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: pip install 'numpy<1.20.0'
      - name: Install cpprb for macOS
        if: startsWith(runner.os, 'macOS')
        run: CC=gcc-9 CXX=g++-9 pip install cpprb
      - run: pip install tensorflow==${{ matrix.TF }}'.*'
      - run: pip install '.[test]'
      - run: pip install -U atari-py
      - name: Install TensorFlow Probability
        if: ${{ matrix.TF == '2.0' }}
        run: pip install tensorflow-probability==0.8.0 gast==0.2.2
      - name: Install TensorFlow Probability for tf2.1
        if: ${{ matrix.TF == '2.2' }}
        run: pip install tensorflow-probability==0.9.0 gast==0.2.2
      - name: Install TensorFlow Probability for tf2.2
        if: ${{ matrix.TF == '2.2' }}
        run: pip install tensorflow-probability==0.10.1 gast==0.3.3
      - name: Install TensorFlow Probability for tf2.3
        if: ${{ matrix.TF == '2.3' }}
        run: pip install tensorflow-probability==0.11.0 gast==0.3.3
      - name: Install TensorFlow Probability for tf2.4
        if: ${{ matrix.TF == '2.4' }}
        run: pip install tensorflow-probability==0.12.0 gast==0.3.3
      - name: Install ROM of atari games for Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: wget http://www.atarimania.com/roms/Roms.rar && 7z x Roms.rar && unzip ROMS.zip && python -m atari_py.import_roms ROMS
      - name: Install ROM of atari games for MacOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install rar && wget http://www.atarimania.com/roms/Roms.rar && unrar x Roms.rar && ditto -V -x -k --sequesterRsrc ROMS.zip . && python -m atari_py.import_roms ROMS
      - name: Install ROM of atari games for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: C:\msys64\usr\bin\wget.exe http://www.atarimania.com/roms/Roms.rar && 7z x Roms.rar && unzip ROMS.zip && python -m atari_py.import_roms ROMS
      - run: python -m unittest discover .
        working-directory: './tests'
      - run: ./test_run_examples.sh
        shell: bash
        if: ((startsWith(runner.os, 'Windows') != true) || (matrix.python == '3.7'))
